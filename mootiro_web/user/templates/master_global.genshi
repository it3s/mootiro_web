<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:py="http://genshi.edgewall.org/"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xml:lang="${locale_name[:2]}" lang="${locale_name[:2]}">
  <!--! The mother of all templates in the site. What you see here is applied
  to absolutely all pages. -->

<?python
appname = request.registry.settings['app.name']
# request.page_deps.lib('global')
# request.page_deps.stylesheet('master_global')
# request.page_deps.lib('js_url')
ff = lambda filename: url('root') + 'static/icon/' + filename
bad_browser = request.headers.get("User-Agent", '').find("MSIE") != -1
if bad_browser:
    favicon = dict(sizes='32x32', file=ff('favicon32.ico'),
        rel='shortcut icon', type='image/x-icon')
else:
    favicon = dict(sizes='32x32', file=ff('32.png'), rel='icon', type=None)
?>

  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <title py:content="pagetitle + ' â€• ' + appname if defined('pagetitle') else appname" />
    <link rel="${favicon['rel']}" type="${favicon['type']}"
         href="${favicon['file']}" sizes="${favicon['sizes']}" />
    <noscript py:if="not defined('js_not_required')">
      <!--! If there is no 'js_not_required' variable, this page
      must need Javascript, so demand it by redirecting to /noscript
      -->
      <meta http-equiv="Refresh" content="0; URL=/noscript" />
      <style type="text/css">
        body {display:none;}
      </style>
    </noscript>

    <!--! Javascript i18n -->
    <py:if test="locale_name != 'en_DEV'">
      <script type='text/javascript'
        src="${static_url('mootiro_web.user:static/js/i18n/{}.js'.format(locale_name))}"></script>
      <script type='text/javascript'>
        _ = tr = Transecma(mfTranslations).translate;
      </script>
    </py:if>
    <script py:if="locale_name == 'en_DEV'">
_ = tr = function (s) { return s; };
String.prototype.interpol = function () {
    // String interpolation for format strings like "Item [0] of [1]".
    // May receive strings or numbers as arguments.
    // For usage, see the test function below.
    var args = arguments;
    try {
        return this.replace(/\[(\d+)\]/g, function () {
            // The replacement string is given by the nth element in the list,
            // where n is the second group of the regular expression:
            return args[arguments[1]];
        });
    } catch (e) {
        if (window.console) console.log(['Exception on interpol() called on',
            this, 'with arguments', arguments]);
        throw(e);
    }
}
    </script>

    ${Markup(request.page_deps.top_output)}
    ${Markup(request.page_deps.lib.tags)}
    ${in_head()}
  </head>
  <body>
    <!--!
    <div id="error_flash_messages">
      ${request.session.pop_flash('error')}
    </div>
    <div id="success_flash_messages">
      ${request.session.pop_flash('success')}
    </div>
    -->
    ${in_body()}
    ${Markup(request.page_deps.script.tags)}
  </body>
</html>
